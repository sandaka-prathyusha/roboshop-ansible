- name: install catalogue component
  hosts: catalogue
  become: yes
  tasks:
    - name: setting Nodejs repo
      ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

    - name: install node js
      ansible.builtin.yum:
        name: nodejs
        state: installed

    - name: check roboshop user exist or not
      ansible.builtin.shell: id roboshop
      register: out
      ignore_errors: true

    - name: create roboshop user
      ansible.builtin.user:
        name: roboshop
      when: out.rc != 0

    - name: check directory is already exist or not
      ansible.builtin.stat:
        path: /app
      register: directory

    - name: create /app directory
      ansible.builtin.file:
        path: /app
        state: directory
      when: directory.stat.exists == False

    - name: download application content
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/catalogue.zip
        dest: /tmp

    - name: extract module
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: install npm
      ansible.builtin.shell: npm install
      args:
        chdir: /app

    - name: copy catalogue,service
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name: daemon reload
      ansible.builtin.systemd:
       daemon_reload: true

    - name: copy mongodb.repo
      ansible.builtin.copy:
        src: mongodb.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: install mongodb-org
      ansible.builtin.yum:
        name: mongodb-org-shell
        state: installed

    - name: load catalogue data
      ansible.builtin.shell:  mongo --host mongodb.nandu18.online < /app/schema/catalogue.js

    - name: restart catalogue
      ansible.builtin.service:
        name: catalogue
        state: restarted
        enabled: yes



