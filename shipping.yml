- name: install shipping component
  hosts: shipping
  become: yes
  tasks:
    - name: install maven
      ansible.builtin.yum:
        name: maven
        state: installed

    - name: check roboshop user exist or not
      ansible.builtin.shell: id roboshop
      register: out
      ignore_errors: true

    - name: create roboshop user
      ansible.builtin.user:
        name: roboshop
      when: out.rc != 0

    - name: check directory is already exist or not
      ansible.builtin.stat:
        path: /app
      register: directory

    - name: create /app directory
      ansible.builtin.file:
        path: /app
        state: directory
      when: directory.stat.exists == False


    - name: unarchive a shipping that needs to be downloaded
      ansible.builtin.unarchive:
        src: https://roboshop-artifacts.s3.amazonaws.com/shipping.zip
        dest: /app
        remote_src: yes

    - name: maven package
      ansible.builtin.shell: mvn clean package
      args:
         chdir: /app

    - name : rename jar file
      ansible.builtin.shell: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app


    - name: copy shipping service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: daemon reload
      ansible.builtin.systemd:
        daemon_reload: true


    - name: install mysql
      ansible.builtin.yum:
        name: mysql
        state: installed



    - name: load mysql schema
      ansible.builtin.shell:  mysql -h mysql.nandu18.online -uroot -pRoboShop@1 < /app/schema/shipping.sql


    - name: restart shipping
      ansible.builtin.service:
        name: shipping
        state: restarted
        enabled: true

